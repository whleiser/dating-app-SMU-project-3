{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport create from './element/create';\nimport css from './module/css';\nimport _insert from './element/insert';\nimport emitter from './module/emitter';\nvar defaults = {\n  prefix: 'material',\n  class: 'view',\n  type: null,\n  element: {\n    tag: 'span',\n    type: null\n  }\n};\n/**\n * Class representing a UI Container. Can add components.\n *\n * @extends Component\n * @return {parent} The class instance\n * @example new Container({\n *   container: document.body\n * });\n */\n\nvar View = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param  {Object} options - Component options\n   * @return {Object} Class instance\n   */\n  function View(options) {\n    _classCallCheck(this, View);\n\n    this.options = Object.assign({}, defaults, options || {}); // init and build\n\n    this.init(options);\n    this.build();\n    return this;\n  }\n  /**\n   * Init class\n   * @params {Object} options The instance options\n   * @return {Object} This class instance\n   */\n\n\n  _createClass(View, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options.name = this.options.name; // implement modules\n\n      Object.assign(this, emitter); // this.controller = controller;\n\n      return this;\n    }\n    /**\n     * [build description]\n     * @return {Object} This class  instance\n     */\n\n  }, {\n    key: \"build\",\n    value: function build(props) {\n      var tag = this.options.tag || 'div';\n      this.root = create(tag, this.options.prefix + '-' + this.options.class);\n\n      if (this.options.name) {\n        css.add(this.root, this.options.class + '-' + this.options.name);\n      }\n\n      if (this.options.css) {\n        css.add(this.root, this.options.css);\n      }\n\n      if (this.options.container) {\n        // console.log(this.options.name, opts.container);\n        _insert(this.root, this.options.container);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(container, context) {\n      _insert(this.root, container, context);\n\n      return this;\n    }\n  }]);\n\n  return View;\n}();\n\nexport default View;","map":null,"metadata":{},"sourceType":"module"}