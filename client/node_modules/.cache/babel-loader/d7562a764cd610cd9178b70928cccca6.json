{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport create from './component/create';\nimport insert from './component/insert';\nimport emitter from './module/emitter';\nimport offset from './element/offset';\nimport List from './list';\nimport Button from './button';\nimport Divider from './divider';\nvar defaults = {\n  prefix: 'material',\n  class: 'tabs',\n  tag: 'div',\n  indicator: {\n    prefix: 'material',\n    class: 'indicator',\n    tag: 'div'\n  }\n};\n\nvar Tabs = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param  {Object} options - Component options\n   * @return {Object} Class instance\n   */\n  function Tabs(options) {\n    _classCallCheck(this, Tabs);\n\n    this.init(options);\n    this.build();\n    return this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = Object.assign({}, defaults, options || {});\n      Object.assign(this, insert, emitter);\n    }\n    /**\n     * Build Method\n     * @return {Object} This class instance\n     */\n\n  }, {\n    key: \"build\",\n    value: function build() {\n      var _this = this;\n\n      this.root = create(this.options);\n      this.tab = {};\n\n      if (this.options.list) {\n        this.list = new List({\n          // root: this.root,\n          tag: 'div',\n          list: this.options.list,\n          target: '.material-button',\n          height: 600,\n          label: 'Flat',\n          render: function render(info) {\n            var item;\n\n            if (info.type === 'divider') {\n              item = new Divider();\n            } else {\n              item = new Button({\n                name: info.name,\n                text: info.text || info.name,\n                tooltip: info.tootip\n              });\n            }\n\n            _this.tab[info.name] = item;\n            return item;\n          },\n          select: function select(item) {\n            _this.selected = item;\n\n            _this.click(item);\n          }\n        }).insert(this.root);\n      }\n\n      this.indicator = create(this.options.indicator);\n      this.insertElement(this.indicator, this.root);\n\n      if (this.options.container) {\n        this.insert(this.options.container);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"select\",\n    value: function select(tab) {\n      // console.log('select', tab, this.tab)\n      this.selected = this.tab[tab];\n      this.click(this.selected.root, true);\n    }\n  }, {\n    key: \"click\",\n    value: function click(item, silent) {\n      // console.log('clickitem', item, this.root);\n      var or = offset(this.root);\n      var o = offset(item);\n      this.indicator.setAttribute('style', 'width: ' + o.width + 'px; left: ' + (o.left - or.left) + 'px;');\n\n      if (!silent) {\n        this.emit('select', item.dataset.name);\n      }\n    }\n  }]);\n\n  return Tabs;\n}();\n\nexport default Tabs;","map":null,"metadata":{},"sourceType":"module"}