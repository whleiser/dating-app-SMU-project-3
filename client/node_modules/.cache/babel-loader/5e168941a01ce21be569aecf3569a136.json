{"ast":null,"code":"'use strict'; // dialog related modules\n\nimport _classCallCheck from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hunterleiser/Desktop/dating-app-SMU-project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport events from './component/events';\nimport emitter from './module/emitter';\nimport controller from './component/controller';\nimport attach from './module/attach';\nimport insert from './component/insert';\nimport event from './element/event.js';\nimport css from './module/css';\nimport Text from './text';\nimport Button from './button';\nimport Toolbar from './toolbar';\nimport Layout from './layout';\nvar defaults = {\n  prefix: 'material',\n  class: 'dialog',\n  tag: 'div',\n  events: [['root.click', 'close']]\n};\n\nvar Dialog = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param  {Object} options - Component options\n   * @return {Object} Class instance\n   */\n  function Dialog(options) {\n    _classCallCheck(this, Dialog);\n\n    this.init(options);\n    this.build();\n    this.attach();\n    this.root.style.display = 'none';\n    return this;\n  }\n  /**\n   * Constructor\n   * @param  {Object} options The class options\n   * @return {Object} This class instance\n   */\n\n\n  _createClass(Dialog, [{\n    key: \"init\",\n    value: function init(options) {\n      // init options\n      this.options = Object.assign({}, defaults, options || {}); // implement modules\n\n      Object.assign(this, events, emitter, attach, insert);\n      this.layout = null;\n      this.content = null;\n      this.html = null;\n      this.controller = controller;\n      return this;\n    }\n    /**\n     * build the component using the super method\n     * @return {Object} The class instance\n     */\n\n  }, {\n    key: \"build\",\n    value: function build() {\n      this.root = document.createElement('div');\n      css.add(this.root, 'material-dialog');\n\n      if (this.options.name) {\n        css.add(this.root, 'dialog-' + this.options.name);\n      }\n\n      if (this.options.css) {\n        css.add(this.root, this.options.css);\n      }\n\n      if (this.options.theme) {\n        css.add(this.root, this.options.theme + '-theme');\n      }\n\n      this.surface = document.createElement('div');\n      css.add(this.surface, 'dialog-surface');\n      this.insertElement(this.surface, this.root);\n\n      if (this.options.title) {\n        this.buildTitle();\n      }\n\n      if (this.options.content) {\n        this.buildContent();\n      }\n\n      if (this.options.layout) {\n        this.buildLayout();\n      }\n\n      if (this.options.html) {\n        this.buildHTML();\n      }\n\n      this.buildActions();\n      event.add(this.surface, 'click', function (ev) {\n        ev.stopPropagation();\n      });\n    }\n  }, {\n    key: \"buildTitle\",\n    value: function buildTitle() {\n      this.title = new Text({\n        type: 'title',\n        css: 'dialog-title',\n        text: this.options.title\n      });\n      this.insertElement(this.title.root, this.surface); // console.log('buildTitle', this.title)\n    }\n  }, {\n    key: \"buildLayout\",\n    value: function buildLayout() {\n      this.layout = new Layout(this.options.layout, this.surface);\n      this.ui = this.layout.component;\n    }\n  }, {\n    key: \"buildHTML\",\n    value: function buildHTML() {\n      this.html = new Container({\n        css: 'dialog-content'\n      });\n    }\n  }, {\n    key: \"buildContent\",\n    value: function buildContent() {\n      // console.log('text content', this.options.content)\n      this.content = new Text({\n        type: 'content',\n        css: 'dialog-content',\n        text: this.options.content\n      });\n      this.insertElement(this.content.root, this.surface);\n    }\n  }, {\n    key: \"buildActions\",\n    value: function buildActions() {\n      var _this = this;\n\n      if (this.options.actions) {\n        this.actions = new Layout(this.options.actions, this.surface);\n        css.add(this.actions.get('root'), 'dialog-actions');\n      } else {\n        var actions;\n\n        if (this.options.accept || this.options.cancel) {\n          actions = new Toolbar({\n            css: 'dialog-actions'\n          });\n          this.insertElement(actions.root, this.surface);\n        }\n\n        if (this.options.cancel) {\n          this.cancel = new Button(this.options.cancel).on('click', function () {\n            _this.emit('canceled');\n\n            _this.close();\n          });\n          this.insertElement(this.cancel.root, actions.root);\n        }\n\n        if (this.options.accept) {\n          this.accept = new Button(this.options.accept).on('click', function () {\n            _this.emit('accepted');\n\n            _this.close();\n          });\n          this.insertElement(this.accept.root, actions.root);\n        }\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      css.add(this.root, 'dialog-closing');\n      var delayMillis = 200; // 1 second\n\n      setTimeout(function () {\n        _this2.root.style.display = 'none';\n        css.remove(_this2.root, 'dialog-closing');\n        css.remove(_this2.root, 'dialog-show');\n      }, delayMillis);\n      this.previousActive.focus();\n      return this;\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this3 = this;\n\n      this.previousActive = document.activeElement;\n      this.root.style.display = 'flex'; // css.add(this.root, 'dialog-showing');\n\n      var delayMillis = 100; // 1 second\n\n      setTimeout(function () {\n        css.add(_this3.root, 'dialog-show'); // css.remove(this.root, 'dialog-showing');\n      }, delayMillis);\n      return this; // var button = this.root.querySelector('button')\n      // if (button) button.focus()\n    }\n  }]);\n\n  return Dialog;\n}();\n\nexport default Dialog;","map":null,"metadata":{},"sourceType":"module"}